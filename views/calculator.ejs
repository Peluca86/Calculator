<style>
    @font-face {
        font-family: "Open 24 Display St";
        src: url('./../assets/font/Open-24-Display-St.ttf');
    }

    .botones {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-gap: 10px;
    }

    input {
        width: 45vw;
        border: 0;
        background-color: black;
        color: white;
        font-size: 15vh;
        text-align: end;
    }

    button {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #f0f0f0;
        border-radius: 100%;
        width: 90px;
        height: 90px;
        transition: box-shadow 0.3s ease; /* Agrega una transición a la sombra */
    }

    button:hover {
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Agrega una sombra al pasar el cursor */
    }

    button:active {
        box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.3); /* Agrega una sombra al ser presionado */
    }

    .cero {
        width: 100%;
        border-radius: 10vh;
        grid-column: span 2;
        justify-content: center;

    }

    .pantalla {
        background-color: black;
    }

    .pantalla-calculadora {
        background-color: black;
    }

    .calculadora {
        font-family: 'Open 24 Display St';
        max-width: 400px;
        height: 100%;
        margin: 0 auto;
        padding: 20px;
        background-color: black;
        border-radius: 10px;
    }

    .pantalla {
        background-color: #0000;
        color: white;
        border-radius: 5px;
        padding: 10px;
        text-align: right;
        font-size: 32px;
        margin-bottom: 10px;
    }

    .ColorGris {
        background-color: rgb(195, 187, 187);
    }

    .ColorNaranja {
        background-color: orange;
    }

    #historial-btn {
        position: absolute;
        top: 10px;
        left: 170px;
        background-color: #4509d1;
        color: white;
        border: none;
        padding: 10px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        cursor: pointer;
        border-radius: 50%; /* Hace que el botón sea más redondo */
        transition: box-shadow 0.3s ease; /* Agrega una transición a la sombra */
    }

    #historial-btn:active {
    transform: translateY(2px); /* Mueve el botón ligeramente hacia abajo al hacer clic */
}

    #historial-btn:hover {
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Agrega una sombra al pasar el cursor */
    }

    #historial-container {
        display: none;
        position: absolute;
        top: 109px; /* Ajusta el valor aquí para moverlo más abajo */
        left: 170px;
        background-color: #f9f9f9;
        padding: 10px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Agrega una sombra leve */
        border: 1px solid #ccc; /* Agrega un borde */
        z-index: 1; /* Asegura que el contenedor esté sobre la calculadora */
    }




</style>
<button id="historial-btn" onclick="mostrarHistorial()">Ver Historial</button>
<div id="historial-container"></div>

<div class="calculadora">

<div class="calculadora">
    <div class="pantalla" id="display">0</div>
    <div class="botones">
        <button onclick="clearDisplay()">AC</button>
        <button onclick="addToDisplay('(')">(</button>
        <button onclick="addToDisplay(')')">)</button>
        <button class="ColorNaranja" onclick="addToDisplay('/')">/</button>

        <button class="ColorGris" onclick="addToDisplay('7')">7</button>
        <button class="ColorGris" onclick="addToDisplay('8')">8</button>
        <button class="ColorGris" onclick="addToDisplay('9')">9</button>
        <button class="ColorNaranja" onclick="addToDisplay('*')">x</button>

        <button class="ColorGris" onclick="addToDisplay('4')">4</button>
        <button class="ColorGris" onclick="addToDisplay('5')">5</button>
        <button class="ColorGris" onclick="addToDisplay('6')">6</button>
        <button class="ColorNaranja" onclick="addToDisplay('-')">-</button>

        <button class="ColorGris" onclick="addToDisplay('1')">1</button>
        <button class="ColorGris" onclick="addToDisplay('2')">2</button>
        <button class="ColorGris" onclick="addToDisplay('3')">3</button>
        <button class="ColorNaranja" onclick="addToDisplay('+')">+</button>

        <button class="ColorGris cero" onclick="addToDisplay('0')">0</button>
        <button class="ColorGris punto" onclick="addToDisplay('.')">.</button>
        <button class="ColorNaranja" onclick="resultado()">=</button>

    </div>
</div>

<script>
let operacionActual = '';
let calculations = [];
let screen = document.getElementById('display');

function addToDisplay(value) {
    operacionActual += value;
    screen.innerText = operacionActual
}

function clearDisplay() {
    operacionActual = '';
        screen.innerText = '0'; 
    }

function resultado() {
    try {
        const result = eval(operacionActual);
        const calculation = {
            input: operacionActual,
            result: result
        };
        calculations.push(calculation);
        saveCalculations(calculations);
        operacionActual = '';
        screen.innerText = result;
    } catch (error) {
        operacionActual = '';
        document.getElementById('display').value = 'Error';
    }
}

function saveCalculations(calculations) {
    fetch('/save', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(calculations)
    })
    .then(response => response.json())
    .then(data => {
        console.log(data.message);
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

function mostrarHistorial() {
        const historialContainer = document.getElementById('historial-container');
        historialContainer.innerHTML = '';

        calculations.forEach(calculation => {
            const historialItem = document.createElement('p');
            historialItem.textContent = `${calculation.input} = ${calculation.result}`;
            historialContainer.appendChild(historialItem);
        });

        // Mostrar u ocultar el contenedor del historial
        historialContainer.style.display = historialContainer.style.display === 'none' ? 'block' : 'none';
    }



</script>
