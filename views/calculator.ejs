<style>
    @font-face {
        font-family: "Open 24 Display St";
        src: url('./../assets/font/Open-24-Display-St.ttf');
    }

    .botones {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-gap: 10px;
    }

    input {
        width: 45vw;
        border: 0;
        background-color: black;
        color: white;
        font-size: 15vh;
        text-align: end;
    }

    button {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #f0f0f0;
        border-radius: 100%;
        width: 90px;
        height: 90px;
    }

    .cero {
        width: 100%;
        border-radius: 10vh;
        grid-column: span 2;
        justify-content: center;

    }

    .pantalla {
        background-color: black;
    }

    .pantalla-calculadora {
        background-color: black;
    }

    .calculadora {
        font-family: 'Open 24 Display St';
        max-width: 400px;
        height: 100%;
        margin: 0 auto;
        padding: 20px;
        background-color: black;
    }

    .pantalla {
        background-color: #0000;
        color: white;
        border-radius: 5px;
        padding: 10px;
        text-align: right;
        font-size: 32px;
        margin-bottom: 10px;
    }

    .ColorGris {
        background-color: rgb(195, 187, 187);
    }

    .ColorNaranja {
        background-color: orange;
    }
</style>


<div class="calculadora">
    <div class="pantalla" id="Screen">0</div>
    <div class="botones">
        <button onclick="clearDisplay()">AC</button>
        <button onclick="addToDisplay('(')">(</button>
        <button onclick="addToDisplay(')')">)</button>
        <button class="ColorNaranja" onclick="addToDisplay('/')">/</button>

        <button class="ColorGris" onclick="addToDisplay('7')">7</button>
        <button class="ColorGris" onclick="addToDisplay('8')">8</button>
        <button class="ColorGris" onclick="addToDisplay('9')">9</button>
        <button class="ColorNaranja" onclick="addToDisplay('*')">x</button>

        <button class="ColorGris" onclick="addToDisplay('4')">4</button>
        <button class="ColorGris" onclick="addToDisplay('5')">5</button>
        <button class="ColorGris" onclick="addToDisplay('6')">6</button>
        <button class="ColorNaranja" onclick="addToDisplay('-')">-</button>

        <button class="ColorGris" onclick="addToDisplay('1')">1</button>
        <button class="ColorGris" onclick="addToDisplay('2')">2</button>
        <button class="ColorGris" onclick="addToDisplay('3')">3</button>
        <button class="ColorNaranja" onclick="addToDisplay('+')">+</button>

        <button class="ColorGris cero" onclick="addToDisplay('0')">0</button>
        <button class="ColorGris punto" onclick="addToDisplay('.')">.</button>
        <button class="ColorNaranja" onclick="calculate()">=</button>

    </div>
</div>
<script>
    let displayValue = '';
    let history = [];
    let screen = document.getElementById('Screen');
    let operacion = false;
    let reset = false;

    function updateHistory() {
        const jsonString = JSON.stringify(history);

        fetch('/update-history', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: jsonString
        })
        .then(response => response.json())
        .then(data => console.log(data))
        .catch(error => console.error(error));

    }


    function addToDisplay(value) {
        if (reset) {
            reset = false;
            if (!isNaN(Number(value))) {
                displayValue = '';
            }
        }
        displayValue += value;
        screen.innerText = displayValue;
        operacion = false;
    }

    function clearDisplay() {
        displayValue = '';
        screen.innerText = '0';
        operacion = false;
    }

    function calculate() {
        try {
            if (!operacion) {
                let operacion = displayValue;
                let result = eval(displayValue);
                if (!isNaN(result)) {
                    displayValue = result.toString();
                    screen.innerText = displayValue;
                    shouldReset = true;
                    history.push({ operation: displayValue, result: resultado });
                    updateHistory();
                } else {
                    screen.innerText = 'Error';
                }
                operacion = true;
            }
        } catch (error) {
            displayValue = '';
            screen.innerText = 'Error';
        }
    }
</script>