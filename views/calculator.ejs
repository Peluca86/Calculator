<style>
    @font-face {
        font-family: "Open 24 Display St";
        src: url('./../assets/font/Open-24-Display-St.ttf');
    }

    .botones {
        display: block;
        width: 100vw;
        padding-left: 38vw;
    }

    input {
        width: 50vw;
        border: 0;
        background-color: black;
        color: white;
        font-size: 15vh;
        text-align: end;
    }

    div {
        display: flex;
    }

    button {
        width: 15vh;
        height: 15vh;
        border-radius: 100%;
        font-size: 3.5em;
        margin: 0.3%;
    }

    .cero {
        width: 30vh;
        border-radius: 50vh;
        text-align: left;
        padding-left: 35px;
        padding-right: 100px;

    }

    .pantalla {
        background-color: black;
    }

    .pantalla-calculadora {
        background-color: black;
    }

    .calculadora {
        font-family: 'Open 24 Display St';
        display: flex;
        flex-direction: column;
        width: fit-content;
    }

    .pantalla {
        text-align: start;
        width: 45vh;
        overflow: hidden;
        margin-left: 38vw;
    }

    .pantalla-botones {
        display: flex;

    }

    .ColorGris {
        background-color: rgb(195, 187, 187);
    }

    .ColorNaranja {
        background-color: orange;
    }
</style>


<div class="calculadora">
    <div class="pantalla">
        <input type="text" id="display" disabled>

    </div>
    <div class="containerbtn">
        <div class="botones">


            <div class="botones-fx">
                <button onclick="clearDisplay()">AC</button>
                <button onclick="">(</button>
                <button onclick="">)</button>
                <button class="ColorNaranja" onclick="dividir()">/</button>
            </div>

            <div class="botones-num">
                <button class="ColorGris" onclick="addToDisplay('7')">7</button>
                <button class="ColorGris" onclick="addToDisplay('8')">8</button>
                <button class="ColorGris" onclick="addToDisplay('9')">9</button>
                <button class="ColorNaranja" onclick="addToDisplay('*')">x</button>
            </div>

            <div class="botones-num">
                <button class="ColorGris" onclick="addToDisplay('4')">4</button>
                <button class="ColorGris" onclick="addToDisplay('5')">5</button>
                <button class="ColorGris" onclick="addToDisplay('6')">6</button>
                <button class="ColorNaranja" onclick="addToDisplay('-')">-</button>
            </div>
            <div class="botones-num">
                <button class="ColorGris" onclick="addToDisplay('1')">1</button>
                <button class="ColorGris" onclick="addToDisplay('2')">2</button>
                <button class="ColorGris" onclick="addToDisplay('3')">3</button>
                <button class="ColorNaranja" onclick="addToDisplay('+')">+</button>
            </div>
            <div class="botones-num">
                <button class="ColorGris cero" onclick="addToDisplay('0')">0</button>
                <button class="ColorGris punto" onclick="addToDisplay('.')">.</button>
                <button class="ColorNaranja" class="igual" onclick="calculate()">=</button>
            </div>
        </div>
    </div>
</div>
<script>
    let displayValue = '';
let history = [];

function addToDisplay(value) {
    displayValue += value;
    document.getElementById('display').value = displayValue;
}

function clearDisplay() {
    displayValue = '';
    document.getElementById('display').value = displayValue;
}

function calculate() {
    try {
        const result = eval(displayValue);
        history.push({ operation: displayValue, result: result });
        updateHistory();
        displayValue = result.toString();
        document.getElementById('display').value = displayValue;
    } catch (error) {
        displayValue = 'Error';
        document.getElementById('display').value = displayValue;
    }
}

function updateHistory() {
    const jsonString = JSON.stringify(history);
  
    fetch('/update-history', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: jsonString
    })
    .then(response => {
      if (response.ok) {
        console.log('Historial actualizado correctamente en el servidor.');
      } else {
        console.error('Error al actualizar el historial en el servidor.');
      }
    })
    .catch(error => {
      console.error('Error:', error);
    });
  
    const historyList = document.getElementById('history-list');
    historyList.innerHTML = '';
    history.forEach(entry => {
      const listItem = document.createElement('li');
      listItem.textContent = `${entry.operation} = ${entry.result}`;
      historyList.appendChild(listItem);
    });
  }
  

</script>